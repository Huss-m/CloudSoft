name: Build & Deploy CloudSoft via Bastion

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and publish CloudSoft
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./publish

    - name: Upload app artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cloudsoft-artifacts
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: cloudsoft-artifacts
        path: ./cloudsoft-artifacts

    - name: Debug – Visa innehåll
      run: |
        echo "Artifacts:"
        ls -la ./cloudsoft-artifacts

    - name: Spara Bastion SSH-nyckel
      run: |
        echo "${{ secrets.BASTION_KEY }}" > bastion_key.pem
        chmod 600 bastion_key.pem

    - name: Spara AppServer SSH-nyckel
      run: |
        echo "${{ secrets.APPSERVER_KEY }}" > appserver_key.pem
        chmod 600 appserver_key.pem

    - name: Starta SSH-tunnel från Bastion → AppServer
      run: |
        ssh -i bastion_key.pem -o StrictHostKeyChecking=no -f -N -L 2222:10.0.0.5:22 azureuser@${{ secrets.BASTION_HOST }}
        sleep 5

    - name: Kopiera CloudSoft-filer till AppServer via tunnel
      run: |
        eval "$(ssh-agent -s)"
        ssh-add appserver_key.pem
        scp -o StrictHostKeyChecking=no -P 2222 -r ./cloudsoft-artifacts/* azureuser@localhost:~/cloudsoft/

    - name: Starta om CloudSoft-tjänsten på AppServer
      run: |
        ssh -i appserver_key.pem -o StrictHostKeyChecking=no -p 2222 azureuser@localhost "sudo systemctl restart cloudsoft"
